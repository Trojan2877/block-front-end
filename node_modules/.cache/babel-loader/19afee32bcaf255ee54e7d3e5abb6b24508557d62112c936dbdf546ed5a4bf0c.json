{"ast":null,"code":"var _jsxFileName = \"/Users/trojan/Documents/Jekts/Full_Stack_Block/block-front-end/src/views/BlockListView.js\",\n  _s = $RefreshSig$();\n// views/BlockListView.js\nimport React, { useState, useEffect } from 'react';\nimport BlockController from '../controllers/BlockController';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BlockListView() {\n  _s();\n  const [blocks, setBlocks] = useState([]);\n  const blockController = new BlockController();\n  useEffect(() => {\n    async function fetchBlocks() {\n      try {\n        const fetchedBlocks = await blockController.getBlocks();\n        setBlocks(fetchedBlocks);\n      } catch (error) {\n        console.error('Error fetching blocks:', error);\n      }\n    }\n    fetchBlocks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Block List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: blocks.map(block => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", block.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Block: \", block.block]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Next Block: \", block.nextBlock]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, block.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(BlockListView, \"EnmQnMllSQUThE3/m+b9p1neh+g=\");\n_c = BlockListView;\nexport default BlockListView;\nvar _c;\n$RefreshReg$(_c, \"BlockListView\");","map":{"version":3,"names":["React","useState","useEffect","BlockController","jsxDEV","_jsxDEV","BlockListView","_s","blocks","setBlocks","blockController","fetchBlocks","fetchedBlocks","getBlocks","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","block","id","nextBlock","_c","$RefreshReg$"],"sources":["/Users/trojan/Documents/Jekts/Full_Stack_Block/block-front-end/src/views/BlockListView.js"],"sourcesContent":["// views/BlockListView.js\nimport React, { useState, useEffect } from 'react';\nimport BlockController from '../controllers/BlockController';\n\nfunction BlockListView() {\n  const [blocks, setBlocks] = useState([]);\n  const blockController = new BlockController();\n\n  useEffect(() => {\n    async function fetchBlocks() {\n      try {\n        const fetchedBlocks = await blockController.getBlocks();\n        setBlocks(fetchedBlocks);\n      } catch (error) {\n        console.error('Error fetching blocks:', error);\n      }\n    }\n\n    fetchBlocks();\n  }, []);\n\n  return (\n    <div>\n      <h2>Block List</h2>\n      <ul>\n        {blocks.map(block => (\n          <li key={block.id}>\n            <p>ID: {block.id}</p>\n            <p>Block: {block.block}</p>\n            <p>Next Block: {block.nextBlock}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default BlockListView;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMS,eAAe,GAAG,IAAIP,eAAe,CAAC,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd,eAAeS,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF,MAAMC,aAAa,GAAG,MAAMF,eAAe,CAACG,SAAS,CAAC,CAAC;QACvDJ,SAAS,CAACG,aAAa,CAAC;MAC1B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;IAEAH,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBf,OAAA;MAAAW,QAAA,EACGR,MAAM,CAACa,GAAG,CAACC,KAAK,iBACfjB,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAAW,QAAA,GAAG,MAAI,EAACM,KAAK,CAACC,EAAE;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBf,OAAA;UAAAW,QAAA,GAAG,SAAO,EAACM,KAAK,CAACA,KAAK;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3Bf,OAAA;UAAAW,QAAA,GAAG,cAAY,EAACM,KAAK,CAACE,SAAS;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAH7BE,KAAK,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACb,EAAA,CA/BQD,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AAiCtB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}