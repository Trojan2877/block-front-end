{"ast":null,"code":"import ApiService from './ApiService';\nconst API_BASE_URL = 'http://localhost:8081';\nconst BlockService = {\n  getBlocks: async () => {\n    return ApiService.get(`${API_BASE_URL}/block`);\n  },\n  createBlock: async blockData => {\n    try {\n      const response = await ApiService.post(`${API_BASE_URL}/block/create`, blockData);\n      if (response.status === 200) {\n        return response.data;\n      } else if (response.status === 400) {\n        throw new Error('Bad Request');\n      }\n    } catch (error) {\n      throw new Error('Error creating block');\n    }\n  },\n  updateBlock: async (oldBlock, newBlock) => {\n    const response = await ApiService.put(`${API_BASE_URL}/block/update/${oldBlock}?newBlock=${newBlock}`);\n    const responseData = await response.json();\n    return responseData;\n  },\n  deleteBlock: async blockId => {\n    return ApiService.delete(`${API_BASE_URL}/block?block=${blockId}`);\n  }\n};\nexport default BlockService;","map":{"version":3,"names":["ApiService","API_BASE_URL","BlockService","getBlocks","get","createBlock","blockData","response","post","status","data","Error","error","updateBlock","oldBlock","newBlock","put","responseData","json","deleteBlock","blockId","delete"],"sources":["/Users/trojan/Documents/Jekts/block-react/src/services/BlockService.js"],"sourcesContent":["import ApiService from './ApiService';\n\nconst API_BASE_URL = 'http://localhost:8081';\n\nconst BlockService = {\n  getBlocks: async () => {\n    return ApiService.get(`${API_BASE_URL}/block`);\n  },\n\n  createBlock: async blockData => {\n    try {\n      const response = await ApiService.post(`${API_BASE_URL}/block/create`, blockData);\n      if (response.status === 200) {\n        return response.data;\n      } else if (response.status === 400) {\n        throw new Error('Bad Request');\n      }\n    } catch (error) {\n      throw new Error('Error creating block');\n    }\n  },\n\n\n  updateBlock: async (oldBlock, newBlock) => {\n    const response = await ApiService.put(`${API_BASE_URL}/block/update/${oldBlock}?newBlock=${newBlock}`);\n    const responseData = await response.json();\n    return responseData;\n  },\n\n  deleteBlock: async blockId => {\n    return ApiService.delete(`${API_BASE_URL}/block?block=${blockId}`);\n  },\n};\n\nexport default BlockService;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,cAAc;AAErC,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,OAAOH,UAAU,CAACI,GAAG,CAAE,GAAEH,YAAa,QAAO,CAAC;EAChD,CAAC;EAEDI,WAAW,EAAE,MAAMC,SAAS,IAAI;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,UAAU,CAACQ,IAAI,CAAE,GAAEP,YAAa,eAAc,EAAEK,SAAS,CAAC;MACjF,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAOF,QAAQ,CAACG,IAAI;MACtB,CAAC,MAAM,IAAIH,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAClC,MAAM,IAAIE,KAAK,CAAC,aAAa,CAAC;MAChC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAID,KAAK,CAAC,sBAAsB,CAAC;IACzC;EACF,CAAC;EAGDE,WAAW,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACzC,MAAMR,QAAQ,GAAG,MAAMP,UAAU,CAACgB,GAAG,CAAE,GAAEf,YAAa,iBAAgBa,QAAS,aAAYC,QAAS,EAAC,CAAC;IACtG,MAAME,YAAY,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAC1C,OAAOD,YAAY;EACrB,CAAC;EAEDE,WAAW,EAAE,MAAMC,OAAO,IAAI;IAC5B,OAAOpB,UAAU,CAACqB,MAAM,CAAE,GAAEpB,YAAa,gBAAemB,OAAQ,EAAC,CAAC;EACpE;AACF,CAAC;AAED,eAAelB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}