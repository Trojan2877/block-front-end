{"ast":null,"code":"import ApiService from './ApiService';\nconst API_BASE_URL = 'http://localhost:8081';\nconst BlockService = {\n  getBlocks: async () => {\n    return ApiService.get(`${API_BASE_URL}/block`);\n  },\n  createBlock: async blockData => {\n    const response = await ApiService.post(`${API_BASE_URL}/block/create`, blockData);\n    if (response.status === 200) {\n      return response.data;\n    } else if (response.status === 400) {\n      throw new Error('Bad Request');\n    }\n  },\n  updateBlock: async (oldBlock, newBlock) => {\n    try {\n      const response = await ApiService.put(`${API_BASE_URL}/block/update/${oldBlock}/?newBlock=${newBlock}`);\n      if (response.status === 200) {\n        return response.data;\n      } else if (response.status === 400) {\n        throw new Error('Bad Request');\n      }\n    } catch (error) {\n      throw new Error('Error updating block');\n    }\n  },\n  deleteBlock: async block => {\n    try {\n      const response = await ApiService.delete(`${API_BASE_URL}/block?block=${block}`);\n      if (response.status === 200) {\n        return response.data;\n      } else if (response.status === 400) {\n        throw new Error('Bad Request');\n      }\n    } catch (error) {\n      throw new Error('Error deleting block');\n    }\n  }\n};\nexport default BlockService;","map":{"version":3,"names":["ApiService","API_BASE_URL","BlockService","getBlocks","get","createBlock","blockData","response","post","status","data","Error","updateBlock","oldBlock","newBlock","put","error","deleteBlock","block","delete"],"sources":["/Users/trojan/Documents/Jekts/block-react/src/services/BlockService.js"],"sourcesContent":["import ApiService from './ApiService';\n\nconst API_BASE_URL = 'http://localhost:8081';\n\nconst BlockService = {\n  getBlocks: async () => {\n    return ApiService.get(`${API_BASE_URL}/block`);\n  },\n\n  createBlock: async blockData => {\n      const response = await ApiService.post(`${API_BASE_URL}/block/create`, blockData);\n      if (response.status === 200) {\n        return response.data;\n      } else if (response.status === 400) {\n        throw new Error('Bad Request');\n      }\n  },\n\n\n  updateBlock: async (oldBlock, newBlock) => {\n    try {\n      const response = await ApiService.put(`${API_BASE_URL}/block/update/${oldBlock}/?newBlock=${newBlock}`);\n      if (response.status === 200) {\n        return response.data;\n      } else if (response.status === 400) {\n        throw new Error('Bad Request');\n      }\n    } catch (error) {\n      throw new Error('Error updating block');\n    }\n  },\n\n  deleteBlock: async block => {\n    try {\n      const response = await ApiService.delete(`${API_BASE_URL}/block?block=${block}`);\n      if (response.status === 200) {\n        return response.data;\n      } else if (response.status === 400) {\n        throw new Error('Bad Request');\n      }\n    } catch (error) {\n      throw new Error('Error deleting block');\n    }\n  },\n};\n\nexport default BlockService;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,cAAc;AAErC,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,OAAOH,UAAU,CAACI,GAAG,CAAE,GAAEH,YAAa,QAAO,CAAC;EAChD,CAAC;EAEDI,WAAW,EAAE,MAAMC,SAAS,IAAI;IAC5B,MAAMC,QAAQ,GAAG,MAAMP,UAAU,CAACQ,IAAI,CAAE,GAAEP,YAAa,eAAc,EAAEK,SAAS,CAAC;IACjF,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3B,OAAOF,QAAQ,CAACG,IAAI;IACtB,CAAC,MAAM,IAAIH,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAClC,MAAM,IAAIE,KAAK,CAAC,aAAa,CAAC;IAChC;EACJ,CAAC;EAGDC,WAAW,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACzC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMP,UAAU,CAACe,GAAG,CAAE,GAAEd,YAAa,iBAAgBY,QAAS,cAAaC,QAAS,EAAC,CAAC;MACvG,IAAIP,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAOF,QAAQ,CAACG,IAAI;MACtB,CAAC,MAAM,IAAIH,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAClC,MAAM,IAAIE,KAAK,CAAC,aAAa,CAAC;MAChC;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,MAAM,IAAIL,KAAK,CAAC,sBAAsB,CAAC;IACzC;EACF,CAAC;EAEDM,WAAW,EAAE,MAAMC,KAAK,IAAI;IAC1B,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMP,UAAU,CAACmB,MAAM,CAAE,GAAElB,YAAa,gBAAeiB,KAAM,EAAC,CAAC;MAChF,IAAIX,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAC3B,OAAOF,QAAQ,CAACG,IAAI;MACtB,CAAC,MAAM,IAAIH,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QAClC,MAAM,IAAIE,KAAK,CAAC,aAAa,CAAC;MAChC;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,MAAM,IAAIL,KAAK,CAAC,sBAAsB,CAAC;IACzC;EACF;AACF,CAAC;AAED,eAAeT,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}