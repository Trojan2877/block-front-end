{"ast":null,"code":"var _jsxFileName = \"/Users/trojan/Documents/Jekts/Full_Stack_Block/block-front-end/src/views/CreateBlockView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BlockController from '../controllers/BlockController';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateBlockView() {\n  _s();\n  const [blockData, setBlockData] = useState({\n    thisBlock: '',\n    nextBlock: ''\n  });\n  const [message, setMessage] = useState('');\n  const [isSuccess, setIsSuccess] = useState(true);\n  const blockController = new BlockController();\n  async function handleCreateBlock(event) {\n    event.preventDefault();\n    try {\n      const createdBlock = await blockController.createBlock(blockData);\n      console.log('Block created:', createdBlock);\n      setBlockData({\n        thisBlock: '',\n        nextBlock: ''\n      });\n      setMessage('Block created successfully');\n      setIsSuccess(true);\n    } catch (error) {\n      console.error('Error creating block:', error);\n      setBlockData({\n        thisBlock: '',\n        nextBlock: ''\n      });\n      setMessage('Block creation failed');\n      setIsSuccess(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Block:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: blockData.thisBlock,\n        onChange: e => setBlockData({\n          ...blockData,\n          thisBlock: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Next Block:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: blockData.nextBlock,\n        onChange: e => setBlockData({\n          ...blockData,\n          nextBlock: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: isSuccess ? 'green' : 'red'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateBlockView, \"Xi0ehwfB0sm7JX0My6IMy2t/Pjk=\");\n_c = CreateBlockView;\nexport default CreateBlockView;\nvar _c;\n$RefreshReg$(_c, \"CreateBlockView\");","map":{"version":3,"names":["React","useState","BlockController","jsxDEV","_jsxDEV","CreateBlockView","_s","blockData","setBlockData","thisBlock","nextBlock","message","setMessage","isSuccess","setIsSuccess","blockController","handleCreateBlock","event","preventDefault","createdBlock","createBlock","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","style","color","_c","$RefreshReg$"],"sources":["/Users/trojan/Documents/Jekts/Full_Stack_Block/block-front-end/src/views/CreateBlockView.js"],"sourcesContent":["import React, { useState } from 'react';\nimport BlockController from '../controllers/BlockController';\n\nfunction CreateBlockView() {\n  const [blockData, setBlockData] = useState({ thisBlock: '', nextBlock: '' });\n  const [message, setMessage] = useState('');\n  const [isSuccess, setIsSuccess] = useState(true);\n  const blockController = new BlockController();\n\n  async function handleCreateBlock(event) {\n    event.preventDefault();\n    try {\n      const createdBlock = await blockController.createBlock(blockData);\n      console.log('Block created:', createdBlock);\n      \n      setBlockData({ thisBlock: '', nextBlock: '' });\n      setMessage('Block created successfully');\n      setIsSuccess(true);\n      \n    } catch (error) {\n      console.error('Error creating block:', error);\n      setBlockData({ thisBlock: '', nextBlock: '' });\n      setMessage('Block creation failed');\n      setIsSuccess(false);\n    }\n  }\n\n  return (\n    <div>\n      <h2>Create Block</h2>\n      <form onSubmit={handleCreateBlock}>\n        <label>Block:</label>\n        <input\n          type=\"text\"\n          value={blockData.thisBlock}\n          onChange={e => setBlockData({ ...blockData, thisBlock: e.target.value })}\n        />\n        <label>Next Block:</label>\n        <input\n          type=\"text\"\n          value={blockData.nextBlock}\n          onChange={e => setBlockData({ ...blockData, nextBlock: e.target.value })}\n        />\n        <button type=\"submit\">Create Block</button>\n      </form>\n      {message && (\n        <p style={{ color: isSuccess ? 'green' : 'red' }}>{message}</p>\n      )}\n    </div>\n  );\n}\n\nexport default CreateBlockView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}